<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.3.3.RELEASE</version>
    <relativePath/>
  </parent>

  <groupId>sa.com.stc</groupId>
  <artifactId>starter-bom</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <description>BOM for spring boot microservices</description>

  <organization>
    <name>Saudi Telecom</name>
    <url>www.stc.com.sa</url>
  </organization>

  <properties>

    <encoding.format>UTF-8</encoding.format>
    <java.version>1.8</java.version>
    <project.build.sourceEncoding>${encoding.format}</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${encoding.format}</project.reporting.outputEncoding>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>


    <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
    <sonar-maven-plugin.version>3.6.0.1398</sonar-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.3</jacoco-maven-plugin.version>
    <docker-maven-plugin.version>0.33.0</docker-maven-plugin.version>
    <git-commit-id-plugin.version>4.0.1</git-commit-id-plugin.version>
    <jib-maven-plugin.version>2.5.2</jib-maven-plugin.version>


    <spring-cloud.version>Hoxton.SR7</spring-cloud.version>
    <spring-boot-admin.version>2.3.0</spring-boot-admin.version>
    <spring-retry.version>1.3.0</spring-retry.version>
    <org.mapstruct.version>1.3.1.Final</org.mapstruct.version>
    <org.projectlombok.version>1.18.12</org.projectlombok.version>
    <commons-pool2.version>2.0</commons-pool2.version>
    <json-schema-validator.version>4.1.1</json-schema-validator.version>
    <awaitility.version>3.1.6</awaitility.version>
    <commons-lang3.version>3.10</commons-lang3.version>
    <commons-io.version>2.7</commons-io.version>
    <springdoc-openapi-ui.version>1.4.3</springdoc-openapi-ui.version>
    <com.google.guava.version>29.0-jre</com.google.guava.version>
    <resilience4j.version>1.5.0</resilience4j.version>
    <logback-kafka-appender.version>0.2.0-RC2</logback-kafka-appender.version>
    <ch.qos.logback.version>1.2.3</ch.qos.logback.version>
    <logstash.logback.version>6.4</logstash.logback.version>

    <!--set this to your docker acct name-->
    <docker.image.prefix>digital-plm</docker.image.prefix>
    <!--Set to name of project-->
    <!--<docker.user>purushot057</docker.user>-->
    <docker.registry.path>172.20.217.14:5000/${docker.image.prefix}</docker.registry.path>
    <docker.image.name>${docker.registry.path}/${project.artifactId}:${project.version}</docker.image.name>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${org.mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>${awaitility.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>de.codecentric</groupId>
        <artifactId>spring-boot-admin-dependencies</artifactId>
        <version>${spring-boot-admin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.retry</groupId>
        <artifactId>spring-retry</artifactId>
        <version>${spring-retry.version}</version>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <optional>true</optional>
        <version>${org.projectlombok.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-ui</artifactId>
        <version>${springdoc-openapi-ui.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${com.google.guava.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.resilience4j</groupId>
        <artifactId>resilience4j-spring-boot2</artifactId>
        <version>${resilience4j.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.danielwegener</groupId>
        <artifactId>logback-kafka-appender</artifactId>
        <version>${logback-kafka-appender.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${ch.qos.logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${ch.qos.logback.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>net.logstash.logback</groupId>
        <artifactId>logstash-logback-encoder</artifactId>
        <version>${logstash.logback.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>${spring-boot.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>junit-vintage-engine</artifactId>
            <groupId>org.junit.vintage</groupId>
          </exclusion>
        </exclusions>
        <scope>test</scope>
      </dependency>
    </dependencies>

  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <configuration>
            <layers>
              <enabled>true</enabled>
              <includeLayerTools>true</includeLayerTools>
            </layers>
          </configuration>
          <executions>
            <execution>
              <id>build-info</id>
              <goals>
                <goal>build-info</goal>
              </goals>
              <configuration>
                <additionalProperties>
                  <encoding.source>${encoding.format}</encoding.source>
                  <encoding.reporting>${encoding.format}</encoding.reporting>
                  <java.source>${maven.compiler.source}</java.source>
                  <java.target>${maven.compiler.target}</java.target>
                </additionalProperties>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>default-prepare-agent</id>
              <phase>initialize</phase>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
              </configuration>
            </execution>

            <execution>
              <id>post-unit-test</id>
              <phase>verify</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>

              </configuration>
            </execution>
            <execution>
              <id>pre-integration-test</id>
              <phase>initialize</phase>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>

              </configuration>
            </execution>

            <execution>
              <id>post-integration-test</id>
              <phase>verify</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <excludes>
                  <exclude>**/*Config.class</exclude>
                </excludes>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
          <executions>
            <execution>
              <id>enforce-versions</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>[3.6.0,)</version>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>${java.version}</version>
                  </requireJavaVersion>
                  <requireReleaseDeps>
                    <onlyWhenRelease>true</onlyWhenRelease>
                    <message>Release builds must not have on snapshot dependencies</message>
                  </requireReleaseDeps>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <annotationProcessorPaths>
              <path>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${org.mapstruct.version}</version>
              </path>
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${org.projectlombok.version}</version>
              </path>
            </annotationProcessorPaths>
            <compilerArgs>
              <compilerArg>
                -Amapstruct.defaultComponentModel=spring
              </compilerArg>
            </compilerArgs>
          </configuration>
        </plugin>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>${docker-maven-plugin.version}</version>
          <configuration>
            <verbose>true</verbose>
            <images>
              <image>
                <name>${docker.image.prefix}/${docker.image.name}</name>
                <alias>${project.artifactId}</alias>
                <build>
                  <assembly>
                    <descriptorRef>artifact</descriptorRef>
                  </assembly>
                  <dockerFile>Dockerfile</dockerFile>
                  <tags>
                    <tag>latest</tag>
                    <tag>${project.version}</tag>
                  </tags>
                </build>
              </image>
            </images>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.google.cloud.tools</groupId>
          <artifactId>jib-maven-plugin</artifactId>
          <version>${jib-maven-plugin.version}</version>
          <configuration>
            <from>
              <image>openjdk:alpine</image>
            </from>
            <to>
              <image>${docker.image.name}</image>
            </to>
          </configuration>
        </plugin>
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>${git-commit-id-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <!-- TODO  -->
  <!--<scm>
      <connection>scm:git:git@github.com:</connection>
      <developerConnection>scm:git:git@github.com:</developerConnection>
      <url>https://github.com/</url>
      <tag>HEAD</tag>
  </scm>-->


  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
    </repository>
  </distributionManagement>

</project>